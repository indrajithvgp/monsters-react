{"version":3,"sources":["components/Card/Card.component.jsx","components/CardList/CardList.component.jsx","components/SearchBar/SearchBar.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","CardList","monsters","map","SearchBar","props","type","placeholder","value","onChange","App","e","setState","searchText","target","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAGA,SAASA,EAAT,GAA0B,IAAXC,EAAU,EAAVA,QACX,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,4BACtB,6BAAKJ,EAAQK,U,MCHzB,SAASC,EAAT,GAA+B,IAAZC,EAAW,EAAXA,SACf,OACI,qBAAKN,UAAU,YAAf,SACKM,EAASC,KAAI,SAAAR,GAAO,OAAI,cAACD,EAAD,CAAuBC,QAASA,GAArBA,EAAQI,S,MCIzCK,MARf,SAAmBC,GACf,OACI,uBAAOT,UAAU,aAAaU,KAAK,SAASC,YAAY,kBACxDC,MAASH,EAAMG,MACfC,SAAUJ,EAAMI,YC8BTC,E,kDA9Bb,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IAYRI,SAAS,SAACE,GAAK,EAAKC,SAAS,CAACC,WAAWF,EAAEG,OAAON,SAXhD,EAAKO,MAAM,CACTb,SAAS,GACTW,WAAW,IAJI,E,gEAOC,IAAD,OACjBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACV,SAASkB,S,+BAKhC,IAAD,EACyBC,KAAKN,MAA7Bb,EADD,EACCA,SAAUW,EADX,EACWA,WACXS,EAAmBpB,EAASqB,QAAO,SAAA5B,GAAO,OAAGA,EAAQK,KAAKwB,cAC/DC,SAASZ,EAAWW,kBACrB,OACE,sBAAK5B,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CAAWY,MAAOa,KAAKN,MAAMF,WAAYJ,SAAUY,KAAKZ,WACxD,cAACR,EAAD,CAAUC,SAAUoB,W,GAxBVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.33937431.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.style.css'\r\n\r\nfunction Card({monster}) {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}/>\r\n            <h2>{monster.name}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Card}\r\n","import React from 'react'\r\nimport {Card} from '../Card/Card.component'\r\nimport './CardList.style.css'\r\n\r\nfunction CardList({monsters}) {\r\n    return (\r\n        <div className='card-list'>\r\n            {monsters.map(monster => <Card key={monster.id} monster={monster}/>)}\r\n        </div> \r\n    )\r\n}\r\n\r\nexport {CardList}\r\n","import React from 'react'\r\nimport './SearchBar.style.css'\r\n\r\nfunction SearchBar(props) {\r\n    return (\r\n        <input className='search-bar' type=\"search\" placeholder=\"search monsters\" \r\n        value = {props.value}\r\n        onChange={props.onChange}/>        \r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n\r\n","import React, { Component} from 'react'\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport {CardList} from './components/CardList/CardList.component'\nimport SearchBar from './components/SearchBar/SearchBar.component'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      monsters:[],\n      searchText:''\n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}))\n  }\n\n  onChange=(e)=>{this.setState({searchText:e.target.value})}\n\n  render(){\n    const {monsters, searchText} = this.state\n    const filteredMonsters = monsters.filter(monster=> monster.name.toLowerCase()\n    .includes(searchText.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monsters Hut</h1>\n        <SearchBar value={this.state.searchText} onChange={this.onChange}/>\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}